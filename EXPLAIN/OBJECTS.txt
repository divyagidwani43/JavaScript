OBJECTS
this is a keyword that creates a copy of the object it is called into
just like we access obj properties this is object's copy so access in same way
console.table(measurement); display in tablular manner
functions inside object are called methods
funtion mus be entered in ax expression manner not declaartion as objects only accept expression as expression produces value held by pro[erty of object

a.firtName = 'john'; 
will change the firstname


console.log(a.age); 
will access age

console.log(a['age']);                                                                                         
calling age from object using bracket notation bracket is solved from left to right but brackets are done first 
fist age is seen then a is compiled inside '' any expression can be put


console.log(a.interestedIn);                                                                                   
will display undefined as Jonas does not have a property called 'interested in', right? And so therefore the result of trying to access 'interested in' on Jonas is undefined.

console.log(a[interestedIn]);                                                                                 
will display correct ,if wrong input given will display undefined , undefined is what we get when we try to access a property on an object that does not exist ,a.[interestedIn] will take value of interestedIn first and it will become a[age]that does exist , it a clever way of asking what data user wants to access from object



a.job = 'teacher';                                                                                             
a['place'] = 'jaipur';
will add property and data

a['friends'].length
a.friends.length

delete a.dk;
delete property and data



a.friends.push('bob');
push into friends array declared in object



console.log(a['calcAge'](1991));
console.log(a.calcAge(1991));
calling function declared in object




























//FOR -IN LOOP
//different than other loops this is for iteratioin of objects 
const object_1 = {
    a: 'hi',
    b: 4,
    c: 55,
};
for (let key in object_1)                                          //key here will hold value of properties of object_1
    // console.log(key);                                           //will print only a and b , commented as in for loop only one line can be executed
    console.log(key, '', object_1[key]);                           //when we log key we print out the name of properties of object_1 seperatly here its a and b as given to object , adding object_1[key] will print the values beside a and b as well

//FOR OF IN OBJECT
for (let key of Object.keys(object_1)) console.log(key)            // will print object_1 data using for in as well use object.keys(object_name)
for (let any of Object.entries(object_1)) console.log(any)         // will print object_1 data in array form use object.entries(object_name)

//FIND
if ('a' in object_1) console.log('yes');                              //if a is in object it will print yes   

//CLONE
const object_2 = {
    a: 'hi',
    b: 4,
};
const another = {};
for (let key in object_1)
    another[key] = object_2[key];
console.log(another)
//same can be done by
const object_3 = {
    a: 'hi',
    b: 4,
};
const another_1 = Object.assign({ f: 66 }, object_3);             //what inside {}will be added extra to another_1         
console.log(another_1)
//same can be done using spread
const another_2 = { ...object_3 }
console.log(another_2);