REDUCE , GREATEST VALUE , ERROR AT LENGTH = 0
//specified 0 as intial value of acc so acc=0 for first looop
// acc = short for accumulator = first value if not specified any code befor it will execute array.length times
// arrayValues = values of array one by one exclude the first


const balanceUse = movements.reduce((acc, arrayValues, i, arr) => {
    console.log(`iteration ${i} : ${acc}`)
    return acc + arrayValues
    // }, 0)
}, 100) //first value 100 so adding to array value starts from 100

WILL GIVE SUM OF ALL ARRAY VALUES

// GET GREATEST VALUE 
const great = movements.reduce((acc, curr, i) => {
    if (acc > curr) return acc
    else return curr
}, 0)
console.log(great)

    console.log(acc) //acc=return value





    // acc4 has no out deposits and out length = 0 here reduce function will error
    // interest i.e the variable declared below inthis function wont execute as well
    const out = movements
        .filter((mov) => mov < 0)
    if (out.length > 1) {
        out.reduce((acc, curr) => acc + curr)
        // console.log(out, 400 + 650 + 130)
        labelSumOut.textContent = `${Math.abs(out)}€`
    } else labelSumOut.textContent = `0000€`
